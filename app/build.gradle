plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'

//    id 'com.google.gms.google-services'
}
//def localProperties = new Properties()
//localProperties.load(rootProject.file("local.properties").newDataInputStream())

android {
    namespace 'com.example.vashopify'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.vashopify"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        buildConfigField("String", "CLOUDINARY_URL", "\"${getProperty('CLOUDINARY_URL')}\"")


        // Load properties from local.properties
//        def localPropertiesFile = rootProject.file("local.properties")
//        if (localPropertiesFile.exists()) {
//            def localProperties = new Properties()
//            localProperties.load(new FileInputStream(localPropertiesFile))

            // Set buildConfigField for RAZORPAY_KEY
//            buildConfigField("String", "RAZORPAY_KEY", "\"${localProperties.getProperty('RAZORPAY_KEY')}\"")

            // Set buildConfigField for CLOUDINARY_URL
//        } else {
//            // Throw an exception if local.properties is not found
//            throw new GradleException("local.properties file not found.")
//        }
//        buildConfigField("String", "RAZORPAY_KEY", "\"${properties.getProperty("RAZORPAY_KEY")}\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        buildConfig = true
    }
    packagingOptions {
        pickFirst 'META-INF/DEPENDENCIES'
    }
}
def getProperty(String propertyName) {
    def localPropertiesFile = rootProject.file("local.properties")
    if (localPropertiesFile.exists()) {
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(localPropertiesFile))
        return localProperties.getProperty(propertyName)
    } else {
        throw new GradleException("local.properties file not found.")
    }
}
dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.13.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-firestore-ktx:25.0.0'
    implementation 'com.google.firebase:firebase-storage:21.0.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'org.testng:testng:7.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//    apply plugin :"kotlin-kapt"

    //Navigation component
    def nav_version = '2.7.7'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //loading button
    implementation 'br.com.simplepass:loading-button-android:2.2.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    //circular image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //viewpager2 indicatior
//    implementation 'io.github.vejei.viewpagerindicator:viewpagerindicator:1.0.0-alpha.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0'
    //stepView
//    implementation 'com.shuhart.stepview:stepview:1.5.1'

    //Android Ktx
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'

    //Dagger hilt
    implementation 'com.google.dagger:hilt-android:2.50'
    kapt 'com.google.dagger:hilt-compiler:2.50'
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.2.0"
    implementation 'com.google.dagger:dagger-android-support:2.50'
//    annotationProcessor 'com.google.dagger:dagger-android-processor:2.50'
    implementation 'com.google.dagger:dagger-android:2.50'
    //Firebase

    implementation 'com.google.firebase:firebase-auth:23.0.0'
     //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.8.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.1'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
//    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //Coroutines with firebase
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3'
    implementation 'com.typesafe:config:1.4.3'
    implementation "org.mongodb:bson:4.11.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.12'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    implementation "com.google.code.gson:gson:2.10.1"

//    Rounde Image View
    implementation "com.makeramen:roundedimageview:2.3.0"
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    //Splash Screen
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "com.github.mancj:MaterialSearchBar:0.8.5"


    // Material Components for Android. Replace the version with the latest version of Material Components library.
    implementation 'com.google.android.material:material:1.12.0'

    // Circle Indicator (To fix the xml preview "Missing classes" error)
    implementation 'me.relex:circleindicator:2.1.6'

    implementation 'org.imaginativeworld.whynotimagecarousel:whynotimagecarousel:2.1.0'
//    implementation "org.litote.kmongo:kmongo:4.4.0"
//    implementation "org.mongodb:mongodb-driver-sync:4.4.3"

    // All:
    implementation 'com.cloudinary:cloudinary-android:2.7.1'
    implementation 'com.cloudinary:cloudinary-http44:1.37.0'
    //Step View
    implementation 'com.github.shuhart:stepview:1.5.1'
    //Shimmer Effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation(platform("com.google.firebase:firebase-bom:32.8.0"))
//    implementation 'androidx.core:core-ktx:1.12.0'  // AndroidX Core library for Kotlin extensions
//    implementation 'androidx.appcompat:appcompat:1.6.1'  // AndroidX AppCompat library
//    implementation 'com.android.support:support-annotations:28.0.0'  // Support annotations
//// Download + Preprocess:
//    implementation 'com.cloudinary:cloudinary-android-download:2.7.1'
//    implementation 'com.cloudinary:cloudinary-android-preprocess:2.7.1'
}
//kapt {
//    correctErrorTypes true
//}